{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loner\\\\Desktop\\\\projects\\\\samgtu-react\\\\app\\\\src\\\\components\\\\charts\\\\chart2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart2 = () => {\n  _s();\n  const [values, setValues] = useState([[]]);\n  const [names, setNames] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const url = 'http://localhost:8000/test';\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        setValues(data.map(item => item.values));\n        setNames(data.map(item => item.name));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, []);\n  const config = {\n    series: [{\n      name: \"Подпись\",\n      data: [0.1, 0.4, 0.2, 0.8, 0.5, 0.5, 0.9]\n    }],\n    options: {\n      chart: {\n        height: 350,\n        type: 'line',\n        zoom: {\n          enabled: false\n        }\n      },\n      toolbar: {\n        enabled: false\n      },\n      grid: {\n        row: {\n          colors: ['#f3f3f3', 'transparent'],\n          // takes an array which will be repeated on columns\n          opacity: 0.5\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'straight'\n      },\n      title: {\n        text: 'Название графика',\n        align: 'left'\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']\n      },\n      yaxis: {\n        title: {\n          text: 'Подпись оси Y'\n        },\n        min: 0,\n        max: 1\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: config.options,\n      type: \"area\",\n      height: 350,\n      series: config.series\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Chart2, \"C8WVjZs2sf+ieY/ilWUvB6mCTzs=\");\n_c = Chart2;\nexport default Chart2;\nvar _c;\n$RefreshReg$(_c, \"Chart2\");","map":{"version":3,"names":["React","useEffect","useState","Chart","Chart2","values","setValues","names","setNames","getData","url","response","fetch","data","json","map","item","name","error","console","log","config","series","options","chart","height","type","zoom","enabled","toolbar","grid","row","colors","opacity","dataLabels","stroke","curve","title","text","align","xaxis","categories","yaxis","min","max"],"sources":["C:/Users/loner/Desktop/projects/samgtu-react/app/src/components/charts/chart2.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst Chart2 = () => {\r\n\r\n    const [values, setValues] = useState([[]]);\r\n    const [names, setNames] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const url = 'http://localhost:8000/test';\r\n            try {\r\n                const response = await fetch(url);\r\n                const data = await response.json();\r\n                setValues(data.map((item) => item.values));\r\n                setNames(data.map((item) => item.name));\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        getData();\r\n    }, []);\r\n\r\n\r\n    const config = {\r\n        series: [\r\n            {\r\n                name: \"Подпись\",\r\n                data: [0.1, 0.4, 0.2, 0.8, 0.5, 0.5, 0.9]\r\n            }\r\n        ],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'line',\r\n                zoom: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            toolbar: {\r\n                enabled: false\r\n            },\r\n            grid: {\r\n                row: {\r\n                    colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                    opacity: 0.5\r\n                },\r\n            },\r\n            dataLabels: {\r\n                enabled: false,\r\n            },\r\n            stroke: {\r\n                curve: 'straight'\r\n            },\r\n            title: {\r\n                text: 'Название графика',\r\n                align: 'left'\r\n            },\r\n            xaxis: {\r\n                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']\r\n            },\r\n            yaxis: {\r\n                title: {\r\n                    text: 'Подпись оси Y'\r\n                },\r\n                min: 0,\r\n                max: 1\r\n            }\r\n        },\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Chart options={config.options} type=\"area\" height={350} series={config.series} />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Chart2;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,kBAAkB;AAAC;AAErC,MAAMC,MAAM,GAAG,MAAM;EAAA;EAEjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMQ,OAAO,GAAG,YAAY;MACxB,MAAMC,GAAG,GAAG,4BAA4B;MACxC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAClCR,SAAS,CAACO,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACX,MAAM,CAAC,CAAC;QAC1CG,QAAQ,CAACK,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC;MAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IACDT,OAAO,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMY,MAAM,GAAG;IACXC,MAAM,EAAE,CACJ;MACIL,IAAI,EAAE,SAAS;MACfJ,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IAC5C,CAAC,CACJ;IACDU,OAAO,EAAE;MACLC,KAAK,EAAE;QACHC,MAAM,EAAE,GAAG;QACXC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACFC,OAAO,EAAE;QACb;MACJ,CAAC;MACDC,OAAO,EAAE;QACLD,OAAO,EAAE;MACb,CAAC;MACDE,IAAI,EAAE;QACFC,GAAG,EAAE;UACDC,MAAM,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;UAAE;UACpCC,OAAO,EAAE;QACb;MACJ,CAAC;MACDC,UAAU,EAAE;QACRN,OAAO,EAAE;MACb,CAAC;MACDO,MAAM,EAAE;QACJC,KAAK,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACHC,IAAI,EAAE,kBAAkB;QACxBC,KAAK,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACHC,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;MAChE,CAAC;MACDC,KAAK,EAAE;QACHL,KAAK,EAAE;UACHC,IAAI,EAAE;QACV,CAAC;QACDK,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE;MACT;IACJ;EACJ,CAAC;EAED,oBACI;IAAA,uBACI,QAAC,KAAK;MAAC,OAAO,EAAEvB,MAAM,CAACE,OAAQ;MAAC,IAAI,EAAC,MAAM;MAAC,MAAM,EAAE,GAAI;MAAC,MAAM,EAAEF,MAAM,CAACC;IAAO;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAChF;AAGd,CAAC;AAAA,GA1EKlB,MAAM;AAAA,KAANA,MAAM;AA6EZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}