{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loner\\\\Desktop\\\\samgtu\\\\app\\\\src\\\\components\\\\charts\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  const [values, setValues] = useState([[]]);\n  const [names, setNames] = useState();\n  useEffect(() => {\n    const getData = async () => {\n      const url = 'http://localhost:8000/temperature';\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n        setValues(data.map(item => item.values));\n        setNames(data.map(item => item.name));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, []);\n  const series = [{\n    name: \"Marine Sprite\",\n    data: [10, 30, 40, 15, 10]\n  }, {\n    name: \"Striking Calf\",\n    data: [50, 20, 40, 15, 10]\n  }, {\n    name: \"Tank Picture\",\n    data: [10, 20, 5, 15, 40]\n  }, {\n    name: \"Bucket Slope\",\n    data: [10, 15, 5, 5, 20]\n  }, {\n    name: \"Reborn Kid\",\n    data: [20, 15, 10, 50, 20]\n  }];\n  const categories = [12, 13, 14];\n  const options = {\n    chart: {\n      type: 'bar',\n      height: 150,\n      stacked: true,\n      stackType: '100%'\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    },\n    title: {\n      text: 'Статистика'\n    },\n    xaxis: {\n      categories: categories\n    },\n    legend: {\n      position: 'top',\n      horizontalAlign: 'left',\n      offsetX: 40\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      type: \"bar\",\n      width: \"450\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"8q80v/iGJNiWE/EW3eqy7TKa/WA=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","Chart","Charts","values","setValues","names","setNames","getData","url","response","fetch","data","json","console","log","map","item","name","error","series","categories","options","chart","type","height","stacked","stackType","plotOptions","bar","horizontal","title","text","xaxis","legend","position","horizontalAlign","offsetX"],"sources":["C:/Users/loner/Desktop/samgtu/app/src/components/charts/Charts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst Charts = () => {\r\n\r\n  const [values, setValues] = useState([[]]);\r\n  const [names, setNames] = useState();\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const url = 'http://localhost:8000/temperature';\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setValues(data.map((item) => item.values));\r\n        setNames(data.map((item) => item.name));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const series = [\r\n    {\r\n      name: \"Marine Sprite\",\r\n      data: [10, 30, 40, 15, 10]\r\n    },\r\n    {\r\n      name: \"Striking Calf\",\r\n      data: [50, 20, 40, 15, 10]\r\n    },\r\n    {\r\n      name: \"Tank Picture\",\r\n      data: [10, 20, 5, 15, 40]\r\n    },\r\n    {\r\n      name: \"Bucket Slope\",\r\n      data: [10, 15, 5, 5, 20]\r\n    },\r\n    {\r\n      name: \"Reborn Kid\",\r\n      data: [20, 15, 10, 50, 20]\r\n    },\r\n\r\n  ];\r\n\r\n  const categories = [12, 13, 14];\r\n\r\n  const options = {\r\n    chart: {\r\n      type: 'bar',\r\n      height: 150,\r\n      stacked: true,\r\n      stackType: '100%'\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    title: {\r\n      text: 'Статистика'\r\n    },\r\n    xaxis: {\r\n      categories: categories,\r\n    },\r\n    legend: {\r\n      position: 'top',\r\n      horizontalAlign: 'left',\r\n      offsetX: 40\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Chart\r\n        options={options}\r\n        series={series}\r\n        type=\"bar\"\r\n        width=\"450\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default Charts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,kBAAkB;AAAC;AAErC,MAAMC,MAAM,GAAG,MAAM;EAAA;EAEnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,EAAE;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMQ,OAAO,GAAG,YAAY;MAC1B,MAAMC,GAAG,GAAG,mCAAmC;MAC/C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBP,SAAS,CAACO,IAAI,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACb,MAAM,CAAC,CAAC;QAC1CG,QAAQ,CAACK,IAAI,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MACpB;IACF,CAAC;IACDX,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,MAAM,GAAG,CACb;IACEF,IAAI,EAAE,eAAe;IACrBN,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAC3B,CAAC,EACD;IACEM,IAAI,EAAE,eAAe;IACrBN,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAC3B,CAAC,EACD;IACEM,IAAI,EAAE,cAAc;IACpBN,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;EAC1B,CAAC,EACD;IACEM,IAAI,EAAE,cAAc;IACpBN,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;EACzB,CAAC,EACD;IACEM,IAAI,EAAE,YAAY;IAClBN,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAC3B,CAAC,CAEF;EAED,MAAMS,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAE/B,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE,KAAK;MACXC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE;IACb,CAAC;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,UAAU,EAAE;MACd;IACF,CAAC;IACDC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLZ,UAAU,EAAEA;IACd,CAAC;IACDa,MAAM,EAAE;MACNC,QAAQ,EAAE,KAAK;MACfC,eAAe,EAAE,MAAM;MACvBC,OAAO,EAAE;IACX;EACF,CAAC;EAGD,oBACE;IAAA,uBACE,QAAC,KAAK;MACJ,OAAO,EAAEf,OAAQ;MACjB,MAAM,EAAEF,MAAO;MACf,IAAI,EAAC,KAAK;MACV,KAAK,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA;EACX;IAAA;IAAA;IAAA;EAAA,QACE;AAGV,CAAC;AAAA,GApFKjB,MAAM;AAAA,KAANA,MAAM;AAuFZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}